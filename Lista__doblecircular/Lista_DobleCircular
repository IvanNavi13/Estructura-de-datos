/* Lista Doble Circular */
#include<stdio.h>
#include <stdlib.h>
struct Lista
{
  int dato;
  struct Lista *siguiente;
  struct Lista *anterior;
};

struct Lista *agregarElemento (struct Lista *, int);
void mostrarLista (struct Lista *);
void mostrarInversa (struct Lista *);
struct Lista *eliminarCola (struct Lista *);
struct Lista *eliminarCabeza (struct Lista *);

int main (void)
{
  struct Lista *lista1 = NULL;
  int max, numero;
  //Ingresa el numero total de nodos en la lista
  scanf ("%d", &max);
  for (int i = 0; i < max; i++)
    {
      scanf ("%d", &numero);
      lista1 = agregarElemento (lista1, numero);
    }
  mostrarLista (lista1);
  printf ("\n");
  mostrarInversa (lista1);
  printf ("\n");
  return 0;
}

struct Lista *
agregarElemento (struct Lista *lista, int dato)
{
  //Agrega elementos al final de la lista
  struct Lista *aux;
  struct Lista *fin;
  struct Lista *nuevo = NULL;
  nuevo = (struct Lista *) malloc (sizeof (struct Lista));
  nuevo->dato = dato;
  nuevo->siguiente = NULL;
  nuevo->anterior = NULL;
  if (lista == NULL)
    {
      lista = nuevo;
      lista->siguiente = lista;
      lista->anterior = lista;
    }
  else
    {
      fin = lista;
      fin = fin->siguiente;
      while (fin->siguiente != lista)
	{
	  fin = fin->siguiente;
	}

      fin->siguiente = nuevo;
      lista->anterior = nuevo;
      nuevo->siguiente = lista;
      nuevo->anterior = fin;
    }
  return lista;
}

void
mostrarLista (struct Lista *lista)
{
  struct Lista *aux;
  aux = lista;
  if (aux == NULL)
    {
      printf ("La lista esta vacia...\n");
      return;
    }
  printf ("%d ", aux->dato);
  aux = aux->siguiente;
  while (aux != lista)
    {
      printf ("%d ", aux->dato);
      aux = aux->siguiente;
    }
}

void
mostrarInversa (struct Lista *lista)
{
  struct Lista *aux;
  aux = lista;
  if (aux == NULL)
    {
      printf ("La lista esta vacia...\n");
      return;
    }
  aux = aux->anterior;
  while (aux != lista)
    {
      printf ("%d ", aux->dato);
      aux = aux->anterior;
    }
  printf ("%d ", aux->dato);
}

struct Lista *
eliminarCola (struct Lista *lista)
{
  struct Lista *aux;
  struct Lista *fin;
  fin = lista;
  fin = fin->siguiente;
  while (fin->siguiente != lista)
    {
      fin = fin->siguiente;
    }
  //Fin ya esta en el final de la lista
  aux = fin->anterior;
  aux->siguiente = lista;
  lista->anterior = aux;
  free (fin);
  return lista;
}

struct Lista *
eliminarCabeza (struct Lista *lista)
{
  struct Lista *aux;
  struct Lista *fin;
  fin = lista;
  fin = fin->siguiente;
  while (fin->siguiente != lista)
    {
      fin = fin->siguiente;
    }
  //Llegamos el final de la lista
  aux = lista;
  lista = lista->siguiente;
  lista->anterior = fin;
  fin->siguiente = lista;
  free (aux);
  return lista;
}
